package model

// Code generated by xo. DO NOT EDIT.

import (
	"context"
)

// MysqlEnumValue represents a row from 'mysql.mysql_enum_value'.
type MysqlEnumValue struct {
	EnumValues string `json:"enum_values"` // enum_values
}

// MysqlEnumValues runs a custom query, returning results as [MysqlEnumValue].
func MysqlEnumValues(ctx context.Context, db DB, schema, enum string) (*MysqlEnumValue, error) {
	// query
	const sqlstr = `SELECT ` +
		`SUBSTRING(column_type, 6, CHAR_LENGTH(column_type) - 6) AS enum_values ` +
		`FROM information_schema.columns ` +
		`WHERE data_type = 'enum' ` +
		`AND table_schema = ? ` +
		`AND column_name = ?`
	// run
	logf(sqlstr, schema, enum)
	var mev MysqlEnumValue
	if err := db.QueryRowContext(ctx, sqlstr, schema, enum).Scan(&mev.EnumValues); err != nil {
		return nil, logerror(err)
	}
	return &mev, nil
}
